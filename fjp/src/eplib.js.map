{"version":3,"file":"eplib.js","sources":["webpack:///webpack/bootstrap","webpack:///./Box.ts","webpack:///./LoadingUI.ts","webpack:///./Main.ts","webpack:///./util.ts"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./Main.ts\");\n","import { Main } from './Main';\nimport { GameEvent, lerp, getMoveDirType, MoveDirType } from './util';\n\nexport class Box extends egret.Sprite {\n\tprivate labTitle: egret.TextField;\n\tprivate imgBackground: egret.Bitmap;\n\tprivate imgIcon: egret.Bitmap;\n\n\timgRing: egret.Sprite;\n\n\tpublic row: number;\n\tpublic col: number;\n\tpublic side: number;\n\tpublic level: number;\n\n\tstatic width: number = 0;\n\tstatic height: number = 0;\n\tstatic intervalX: number = 20;\n\tstatic intervalY: number = 20;\n\tpublic static offsetX: number = 0;\n\tpublic static offsetY: number = 0;\n\n\tpublic static init() {\n\t\tlet stage = egret.MainContext.instance.stage;\n\t\tlet stageWidth = stage.stageWidth;\n\t\tlet stageHeight = stage.stageHeight;\n\t\tBox.width = (stageWidth - (Main.boxCol + 1) * Box.intervalX) / Main.boxCol;\n\t\tBox.height = Box.width + 30;\n\t\tBox.offsetX = Box.intervalX;\n\t\tBox.offsetY = stageHeight - Box.height * Main.boxRow - Box.intervalY * (Main.boxRow + 1);\n\t}\n\n\tpublic constructor(public game: Main, r: number, c: number) {\n\t\tsuper();\n\t\tif (Box.width == 0) Box.init();\n\n\t\tthis.touchEnabled = false;\n\t\tthis.row = r;\n\t\tthis.col = c;\n\t\tthis.width = Box.width;\n\t\tthis.height = Box.height;\n\n\t\t// this.graphics.beginFill(0xff00ff);\n\t\t// this.graphics.drawRect(0, 0, this.width, this.height);\n\t\t// this.graphics.endFill();\n\n\t\tlet imgBackground = new egret.Bitmap();\n\t\tthis.imgBackground = imgBackground;\n\t\tthis.imgBackground.width = this.width;\n\t\tthis.imgBackground.height = this.height;\n\t\tthis.addChild(imgBackground);\n\n\t\tlet imgIcon = new egret.Bitmap();\n\t\tthis.addChild(imgIcon);\n\t\tthis.imgIcon = imgIcon;\n\t\tthis.imgIcon.x = this.width / 2;\n\t\tthis.imgIcon.y = 90;\n\n\t\tlet textfield = new egret.TextField();\n\t\tthis.addChild(textfield);\n\t\ttextfield.x = this.width / 2;\n\t\ttextfield.y = 0;\n\t\ttextfield.size = 40;\n\t\ttextfield.text = '2';\n\t\tthis.labTitle = textfield;\n\n\t\t// this.createRing();\n\t\t// if (this.row == 1 && this.col == 1)\n\t\tthis.game.ebus.addEventListener(\n\t\t\tGameEvent.DragEnd,\n\t\t\t() => {\n\t\t\t\tthis.imgRing.scaleY = 0;\n\t\t\t},\n\t\t\tthis,\n\t\t);\n\n\t\tthis.game.ebus.addEventListener(\n\t\t\tGameEvent.Drag,\n\t\t\t(e: egret.Event) => {\n\t\t\t\t// console.log('drag', e.data.offset);\n\t\t\t\tlet { offset } = e.data;\n\t\t\t\t// if (Math.abs(offset.x) > Math.abs(offset.y)) {\n\t\t\t\tif (getMoveDirType(game.moveDirection) == MoveDirType.Horizone) {\n\t\t\t\t\tthis.imgRing.y = this.height / 2;\n\t\t\t\t\tthis.imgRing.scaleX = this.height / this.width;\n\t\t\t\t\tif (offset.x > 0) {\n\t\t\t\t\t\tthis.imgRing.x = this.width;\n\t\t\t\t\t\tthis.imgRing.rotation = 90;\n\t\t\t\t\t\tthis.imgRing.scaleY = lerp(0, 0.2, Math.abs(offset.x) / 150);\n\t\t\t\t\t} else if (offset.x < 0) {\n\t\t\t\t\t\tthis.imgRing.x = 0;\n\t\t\t\t\t\tthis.imgRing.rotation = -90;\n\t\t\t\t\t\tthis.imgRing.scaleY = lerp(0, 0.2, Math.abs(offset.x) / 150);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.imgRing.scaleY = 0;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.imgRing.rotation = 0;\n\t\t\t\t\tthis.imgRing.x = this.width / 2;\n\t\t\t\t\tthis.imgRing.scaleX = 1;\n\t\t\t\t\tif (offset.y < 0) {\n\t\t\t\t\t\tthis.imgRing.scaleY = lerp(0, 0.2, Math.abs(offset.y) / 150);\n\t\t\t\t\t\tthis.imgRing.y = 0;\n\t\t\t\t\t} else if (offset.y > 0) {\n\t\t\t\t\t\tthis.imgRing.scaleY = -lerp(0, 0.2, Math.abs(offset.y) / 150);\n\t\t\t\t\t\tthis.imgRing.y = Box.height - 2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.imgRing.scaleY = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tthis,\n\t\t);\n\t}\n\n\tcreateRing(c: number) {\n\t\tif (!this.imgRing) {\n\t\t\tthis.imgRing = new egret.Sprite();\n\t\t\tthis.addChild(this.imgRing);\n\t\t\tthis.imgRing.x = this.width / 2;\n\t\t\tthis.imgRing.scaleY = 0;\n\n\t\t\tthis.imgRing.scaleY = 0;\n\t\t\tlet shape = this.imgRing.graphics;\n\t\t\tlet r = Box.width;\n\t\t\t// shape.beginFill(c);\n\t\t\tshape.beginFill(0xffffff);\n\t\t\tshape.drawArc(0, 0, this.width / 2 - 3, -(180 * Math.PI) / 180, 0, false); // 从起始点顺时针画弧到终点\n\t\t\tshape.endFill();\n\t\t}\n\n\t\tthis.imgRing.tint = c;\n\t}\n\n\tpublic perform(smode: {}, nmode: {}) {\n\t\tlet game = this.game;\n\t\tlet tw: egret.Tween;\n\t\tif (smode['move'] == -1) {\n\t\t\ttw = egret.Tween.get(this).to({ alpha: 0 }, 80);\n\t\t\tgame.lockMove++;\n\t\t} else if (smode['move'] == 1) {\n\t\t\ttw = egret.Tween.get(this).to({ x: smode['x'], y: smode['y'] }, 120);\n\t\t\tgame.lockMove++;\n\t\t}\n\n\t\tif (nmode['new'] == -1) {\n\t\t\ttw.call(function() {\n\t\t\t\tthis.reset();\n\t\t\t\tegret.Tween.get(this)\n\t\t\t\t\t.to({ alpha: 1 }, 150)\n\t\t\t\t\t.call(function() {\n\t\t\t\t\t\tgame.lockMove--;\n\t\t\t\t\t});\n\t\t\t}, this);\n\t\t} else if (nmode['new'] == 1) {\n\t\t\ttw.call(function() {\n\t\t\t\tthis.level = nmode['level'];\n\t\t\t\tthis.side = nmode['side'];\n\t\t\t\tthis.alpha = 1;\n\t\t\t\tthis.rebuild();\n\t\t\t\tgame.lockMove--;\n\t\t\t}, this);\n\t\t}\n\t}\n\n\tpublic reset(level: any = null, side: any = null): void {\n\t\tthis.side = side != null ? side : Math.floor(Math.random() * 3);\n\t\tthis.level = level != null ? level : Math.pow(2, Math.floor(Math.random() * 2) + 1);\n\t\t// this.level = 2;\n\t\tthis.rebuild();\n\t\t// console.log(\"reset\", this.row, this.col, this.level);\n\t}\n\n\tpublic rebuild(): void {\n\t\tlet color = this.side == 0 ? 0xffffff : 0x0;\n\t\tthis.labTitle.textColor = color;\n\t\tthis.labTitle.text = this.level.toString();\n\t\tthis.labTitle.anchorOffsetX = this.labTitle.width / 2;\n\n\t\tlet bkres = this.side == 0 ? 'bkcn' : 'bkjp';\n\t\tlet texture: egret.Texture = RES.getRes(bkres);\n\t\tthis.imgBackground.texture = texture;\n\n\t\tlet icres = this.level.toString();\n\t\ticres += this.side == 0 ? 'c' : 'j';\n\t\tthis.imgIcon.texture = RES.getRes(icres);\n\t\tthis.imgIcon.anchorOffsetX = this.imgIcon.anchorOffsetY = this.imgIcon.width / 2;\n\n\t\tthis.x = Box.intervalX + this.col * (Box.width + Box.intervalX);\n\t\tthis.y = Box.offsetY + this.row * (Box.height + Box.intervalY);\n\n\t\tlet bkc = this.side == 0 ? 0x0340ad : 0xf6a517;\n\t\tthis.createRing(bkc);\n\t}\n}\n","let testVersionCheck = 45;\nimport { Main } from './Main';\nimport { readCookie, createCookie, getBrowserVersion } from './util';\n\nexport class LoadingUI extends egret.Sprite {\n\tprivate labProgress: egret.TextField;\n\tprivate labSound: egret.TextField;\n\tprivate labMusic: egret.TextField;\n\tprivate loadFinished: boolean = false;\n\tprivate mainDoc: Main;\n\n\tpublic constructor(md: Main) {\n\t\tsuper();\n\t\tthis.mainDoc = md;\n\t\tthis.createView();\n\t}\n\n\tpublic static isSoundOn() {\n\t\tlet cso = readCookie('soundOn');\n\t\treturn cso == null || cso == '1';\n\t}\n\n\tpublic static isMusicOn() {\n\t\tlet mso = readCookie('musicOn');\n\t\treturn mso == null || mso == '1';\n\t}\n\n\tprivate enableSound(b: boolean) {\n\t\tthis.labSound.text = !b ? '音效：关' : '音效：开';\n\t\tthis.labSound.backgroundColor = !b ? 0xee3300 : 0x00ee33;\n\t\tcreateCookie('soundOn', !b ? '0' : '1', 10);\n\t}\n\n\tprivate enableMusic(b: boolean) {\n\t\tthis.labMusic.text = !b ? '音乐：关' : '音乐：开';\n\t\tthis.labMusic.backgroundColor = !b ? 0xee3300 : 0x00ee33;\n\t\tcreateCookie('musicOn', !b ? '0' : '1', 10);\n\t}\n\n\tprivate createView(): void {\n\t\tlet stage = egret.MainContext.instance.stage;\n\t\tlet stageW = stage.stageWidth;\n\t\tlet stageH = stage.stageHeight;\n\n\t\tthis.graphics.beginFill(0x333333, 0.9);\n\t\tthis.graphics.drawRect(0, 0, stageW, stageH);\n\t\tthis.graphics.endFill();\n\n\t\tthis.labProgress = new egret.TextField();\n\t\tthis.labProgress.y = 50;\n\t\tthis.labProgress.width = stageW;\n\t\tthis.labProgress.size = 50;\n\t\tthis.labProgress.text = '加载中，请稍等...';\n\t\tthis.labProgress.textAlign = 'center';\n\t\tthis.addChild(this.labProgress);\n\n\t\tlet soundOn = LoadingUI.isSoundOn();\n\t\tlet labSound = new egret.TextField();\n\t\tlabSound.x = 80;\n\t\tlabSound.y = 130;\n\t\tlabSound.width = 200;\n\t\tlabSound.height = 60;\n\t\tlabSound.size = 40;\n\t\tlabSound.textAlign = 'center';\n\t\tlabSound.verticalAlign = 'middle';\n\t\tlabSound.background = true;\n\t\tlabSound.stroke = 2;\n\t\tlabSound.strokeColor = 0;\n\t\tlabSound.touchEnabled = true;\n\t\tlabSound.addEventListener(\n\t\t\tegret.TouchEvent.TOUCH_BEGIN,\n\t\t\tfunction(e: egret.Event) {\n\t\t\t\te.stopPropagation();\n\t\t\t\tsoundOn = !soundOn;\n\t\t\t\tconsole.log(soundOn);\n\t\t\t\tthis.enableSound(soundOn);\n\t\t\t},\n\t\t\tthis,\n\t\t);\n\t\tthis.labSound = labSound;\n\t\tthis.addChild(labSound);\n\t\tthis.enableSound(soundOn);\n\n\t\tlet musicOn = LoadingUI.isMusicOn();\n\t\tlet labMusic = new egret.TextField();\n\t\tlabMusic.x = 360;\n\t\tlabMusic.y = 130;\n\t\tlabMusic.width = 200;\n\t\tlabMusic.height = 60;\n\t\tlabMusic.size = 40;\n\t\tlabMusic.textAlign = 'center';\n\t\tlabMusic.verticalAlign = 'middle';\n\t\tlabMusic.background = true;\n\t\tlabMusic.stroke = 2;\n\t\tlabMusic.strokeColor = 0;\n\t\tlabMusic.touchEnabled = true;\n\t\tlabMusic.addEventListener(\n\t\t\tegret.TouchEvent.TOUCH_BEGIN,\n\t\t\tfunction(e: egret.Event) {\n\t\t\t\te.stopPropagation();\n\t\t\t\tmusicOn = !musicOn;\n\t\t\t\tconsole.log(musicOn);\n\t\t\t\tthis.enableMusic(musicOn);\n\t\t\t},\n\t\t\tthis,\n\t\t);\n\t\tthis.labMusic = labMusic;\n\t\tthis.addChild(labMusic);\n\t\tthis.enableMusic(musicOn);\n\n\t\tlet labGuide = new egret.TextField();\n\t\tlabGuide.y = 180;\n\t\tlabGuide.width = stageW;\n\t\tlabGuide.size = 35;\n\t\tlabGuide.textAlign = 'center';\n\t\tthis.addChild(labGuide);\n\n\t\tlet parser: egret.HtmlTextParser = new egret.HtmlTextParser();\n\t\tlet text = '\\n';\n\t\ttext += '<font color=#ff0000 size=70 stroke=2><b>玩法说明</b></font>';\n\t\ttext += '\\n\\n';\n\t\ttext += '1、上下左右滑动，类似于2048';\n\t\ttext += '\\n\\n';\n\t\ttext +=\n\t\t\t'2、<font color=#0000ff stroke=2 strokeColor=0xff0000>蓝色</font>是我军，<font color=#ffff00 stroke=2>黄色</font>是日军！';\n\t\ttext += '\\n\\n';\n\t\ttext += '3、相同数字碰撞即合并叠加，\\n颜色变为<font color=0xff0000>主动撞击者</font>颜色';\n\t\ttext += '\\n\\n';\n\t\ttext += '4、只有我军消灭日军才计分！';\n\t\tlabGuide.textFlow = parser.parser(text);\n\n\t\tlet y = 750;\n\t\ttext = readCookie('lastGame');\n\t\tif (text != null) {\n\t\t\tlet labLoad = new egret.TextField();\n\t\t\ty = 650;\n\t\t\tlabLoad.y = y;\n\t\t\tlabLoad.width = stageW;\n\t\t\tlabLoad.height = 100;\n\t\t\tlabLoad.size = 40;\n\t\t\tlabLoad.textAlign = 'center';\n\t\t\tlabLoad.verticalAlign = 'middle';\n\t\t\tlabLoad.text = '发现你上局没有玩完，\\n点此继续游戏';\n\t\t\tlabLoad.backgroundColor = 0xee3300;\n\t\t\tlabLoad.background = true;\n\t\t\tlabLoad.touchEnabled = true;\n\t\t\tlabLoad.addEventListener(\n\t\t\t\tegret.TouchEvent.TOUCH_BEGIN,\n\t\t\t\tfunction(e: egret.Event) {\n\t\t\t\t\tif (!this.loadFinished) return;\n\t\t\t\t\tthis.close();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t},\n\t\t\t\tthis,\n\t\t\t);\n\n\t\t\tthis.addChild(labLoad);\n\t\t\ty += 150;\n\t\t}\n\n\t\tlet bv = getBrowserVersion();\n\t\tlet labBegin = new egret.TextField();\n\t\tlabBegin.y = y;\n\t\tlabBegin.width = stageW;\n\t\tlabBegin.size = 40;\n\t\tlabBegin.textAlign = 'center';\n\t\tlabBegin.text = '点击开始新游戏';\n\t\t// labBegin.text += bv[\"android\"];\n\t\tthis.addChild(labBegin);\n\n\t\tthis.touchEnabled = true;\n\t\tthis.addEventListener(\n\t\t\tegret.TouchEvent.TOUCH_BEGIN,\n\t\t\tfunction(e: egret.Event) {\n\t\t\t\tif (!this.loadFinished) return;\n\t\t\t\tcreateCookie('lastGame', '', -1);\n\t\t\t\tthis.mainDoc.resetGame();\n\t\t\t\tthis.close();\n\t\t\t},\n\t\t\tthis,\n\t\t);\n\t}\n\n\tpublic setProgress(current, total): void {\n\t\tthis.labProgress.text = '加载中：' + current + '/' + total;\n\t\tif (current >= total) {\n\t\t\tthis.labProgress.text = '加载已完成！';\n\t\t\tthis.labProgress.text += '(版本' + testVersionCheck + ')';\n\t\t\tthis.loadFinished = true;\n\t\t}\n\t}\n\n\tpublic close() {\n\t\tthis.parent.removeChild(this);\n\t\tif (LoadingUI.isMusicOn()) this.mainDoc.playMusic();\n\t}\n}\n","import { LoadingUI } from './LoadingUI';\nimport { Box } from './Box';\nimport {\n\tgetBrowserVersion,\n\tMoveDir,\n\teraseCookie,\n\tcreateCookie,\n\treadCookie,\n\tGameEvent,\n\tgetMoveDirType,\n} from './util';\nexport class Main extends egret.Sprite {\n\tebus: egret.EventDispatcher;\n\tprivate loadingView: LoadingUI;\n\tprivate textfield: egret.TextField;\n\tprivate panResult;\n\tprivate labResult;\n\n\tpublic static boxRow: number = 5;\n\tpublic static boxCol: number = 5;\n\tprivate boxes: any[][];\n\n\tprivate killEnemy: number = 0;\n\tprivate rankData;\n\tprivate soundGood: egret.Sound;\n\tprivate soundBad: egret.Sound;\n\n\tprivate _lockMove: number = 0;\n\tprivate curState: String;\n\tprivate browserVersion = getBrowserVersion();\n\n\tmoveCount: number;\n\tsaveLimit: number = 5;\n\tsaveHistory: Array<any>;\n\tpublic moveDirection: MoveDir;\n\tmoveOffset: number;\n\n\tpublic constructor() {\n\t\tsuper();\n\t\tthis.ebus = new egret.EventDispatcher();\n\t\tthis.addEventListener(egret.Event.ADDED_TO_STAGE, this.onAddToStage, this);\n\t\tthis.saveHistory = [];\n\t}\n\n\tprivate async onAddToStage(event: egret.Event) {\n\t\tthis.loadingView = new LoadingUI(this);\n\t\tthis.stage.addChild(this.loadingView);\n\n\t\tthis.touchEnabled = true;\n\t\tthis.width = this.stage.stageWidth;\n\t\tthis.height = this.stage.stageHeight;\n\t\tthis.graphics.beginFill(0x666666, 0.95);\n\t\tthis.graphics.drawRect(0, 0, this.width, this.height);\n\t\tthis.graphics.endFill();\n\t\t// console.log(\"add to stage\", this.width, this.height, this.touchEnabled);\n\n\t\tRES.addEventListener(RES.ResourceEvent.GROUP_PROGRESS, this.onResourceProgress, this);\n\t\tawait RES.loadConfig('resource/all.res.json', 'resource/');\n\t\tawait RES.loadGroup('all');\n\t\tRES.removeEventListener(RES.ResourceEvent.GROUP_PROGRESS, this.onResourceProgress, this);\n\n\t\tBox.init();\n\t\tthis.loadingView.close();\n\t\tthis.createUI();\n\t\tthis.createGameScene();\n\t}\n\n\tprivate onResourceProgress(e): void {\n\t\tlet event = e as RES.ResourceEvent;\n\t\t// console.log('prg', event.resItem);\n\t\tthis.loadingView.setProgress(event.itemsLoaded, event.itemsTotal);\n\t}\n\n\tpublic playMusic() {\n\t\tlet loader: egret.URLLoader = new egret.URLLoader();\n\t\tloader.addEventListener(\n\t\t\tegret.Event.COMPLETE,\n\t\t\tfunction loadOver(event: egret.Event) {\n\t\t\t\tlet sound: egret.Sound = loader.data;\n\t\t\t\tsound.play();\n\t\t\t},\n\t\t\tthis,\n\t\t);\n\t\tloader.dataFormat = egret.URLLoaderDataFormat.SOUND;\n\t\tloader.load(new egret.URLRequest('http://xjh.19v5.com:5000/bkmusic.mp3'));\n\t}\n\tpublic playMusic2() {\n\t\tRES.getResAsync(\n\t\t\t'bkmusic',\n\t\t\tfunction(data, key) {\n\t\t\t\tlet sound: egret.Sound = data;\n\t\t\t\tsound.play(0, 3).volume = 0.5;\n\t\t\t},\n\t\t\tthis,\n\t\t);\n\t}\n\n\t// --------------------------------\n\tprivate needMove: boolean;\n\tprivate downPoint: egret.Point;\n\tprivate movePoint: egret.Point;\n\n\tpublic get lockMove() {\n\t\treturn this._lockMove;\n\t}\n\tpublic set lockMove(v: number) {\n\t\tif (this._lockMove > 0 && v == 0) {\n\t\t\tthis.saveGame();\n\t\t}\n\t\tthis._lockMove = v;\n\t\t// console.log(v)\n\t}\n\n\tprivate mouseDownHandle(event: egret.TouchEvent): void {\n\t\tthis.addEventListener(egret.TouchEvent.TOUCH_MOVE, this.stage_mouseMoveHandler, this);\n\t\tthis.addEventListener(egret.TouchEvent.TOUCH_END, this.stage_mouseUpHandler, this);\n\t\tthis.addEventListener(egret.Event.LEAVE_STAGE, this.stage_mouseUpHandler, this);\n\n\t\tthis.downPoint = this.globalToLocal(event.stageX, event.stageY);\n\t\tthis.moveDirection = MoveDir.NONE;\n\t}\n\n\tprivate stage_mouseMoveHandler(event: egret.TouchEvent): void {\n\t\tif (!this.movePoint) this.movePoint = new egret.Point();\n\t\tthis.movePoint.x = event.stageX;\n\t\tthis.movePoint.y = event.stageY;\n\n\t\tlet newDir = this.getMoveDir();\n\t\tif (this.moveDirection == MoveDir.NONE) this.moveDirection = newDir;\n\t\telse if (getMoveDirType(this.moveDirection) == getMoveDirType(newDir)) {\n\t\t\tthis.moveDirection = newDir;\n\t\t}\n\t\tthis.ebus.dispatchEventWith(GameEvent.Drag, false, {\n\t\t\toffset: this.movePoint.subtract(this.downPoint),\n\t\t});\n\t}\n\n\tpublic stage_mouseUpHandler(event: egret.Event): void {\n\t\tthis.removeEventListener(egret.TouchEvent.TOUCH_MOVE, this.stage_mouseMoveHandler, this);\n\t\tthis.removeEventListener(egret.TouchEvent.TOUCH_END, this.stage_mouseUpHandler, this);\n\t\tthis.addEventListener(egret.Event.LEAVE_STAGE, this.stage_mouseUpHandler, this);\n\n\t\tif (this.moveDirection != MoveDir.NONE) {\n\t\t\tconsole.log('moveoffset', this.moveOffset);\n\t\t\tif (Math.abs(this.moveOffset) > 2 * 50) {\n\t\t\t\tthis.doMove(this.moveDirection);\n\t\t\t}\n\t\t}\n\t\tthis.ebus.dispatchEventWith(GameEvent.DragEnd);\n\t}\n\n\tprivate getMoveDir(): MoveDir {\n\t\tlet p: egret.Point = this.globalToLocal(this.movePoint.x, this.movePoint.y);\n\t\tlet offSetX: number = p.x - this.downPoint.x;\n\t\tlet offSetY: number = p.y - this.downPoint.y;\n\n\t\tif (offSetY < 0 && Math.abs(offSetY) > Math.abs(offSetX)) {\n\t\t\tthis.moveOffset = offSetY;\n\t\t\treturn MoveDir.UP;\n\t\t} else if (offSetX > 0 && offSetX > Math.abs(offSetY)) {\n\t\t\tthis.moveOffset = offSetX;\n\t\t\treturn MoveDir.RIGHT;\n\t\t} else if (offSetY > 0 && offSetY > Math.abs(offSetX)) {\n\t\t\tthis.moveOffset = offSetY;\n\t\t\treturn MoveDir.DOWN;\n\t\t} else if (offSetX < 0 && Math.abs(offSetX) > Math.abs(offSetY)) {\n\t\t\tthis.moveOffset = offSetX;\n\t\t\treturn MoveDir.LEFT;\n\t\t}\n\t}\n\n\tprivate getRank() {\n\t\tlet urlloader = new egret.URLLoader();\n\t\tlet urlreq: egret.URLRequest;\n\t\turlreq = new egret.URLRequest();\n\n\t\turlreq.url = 'http://ali.19v5.com:10020/api/get_rank?score=';\n\t\turlreq.url += this.killEnemy;\n\n\t\turlloader.load(urlreq);\n\t\turlloader.addEventListener(\n\t\t\tegret.Event.COMPLETE,\n\t\t\tfunction(event: egret.Event) {\n\t\t\t\tif (this.curState != 'showResult') return;\n\t\t\t\tconsole.log(urlloader.data);\n\t\t\t\tlet data: egret.URLVariables = urlloader.data;\n\t\t\t\tlet txt = data.toString();\n\t\t\t\tlet obj = JSON.parse(txt);\n\t\t\t\tthis.showOver(obj.rank, obj.percent);\n\t\t\t},\n\t\t\tthis,\n\t\t);\n\t}\n\n\tprivate showOver(iRank: number = 0, iPercent: number = 0) {\n\t\tthis.textfield.text = '分享给更多抗日小伙伴吧~';\n\n\t\tlet parser: egret.HtmlTextParser = new egret.HtmlTextParser();\n\n\t\tif (this.panResult == null) {\n\t\t\tlet pan = new egret.Sprite();\n\t\t\tpan.y = Box.offsetY - 10;\n\t\t\tpan.width = this.width;\n\t\t\tpan.height = this.height - pan.y;\n\t\t\tpan.graphics.beginFill(0x003366, 0.8);\n\t\t\tpan.graphics.drawRect(0, 0, pan.width, pan.height);\n\t\t\tpan.graphics.endFill();\n\t\t\tpan.touchEnabled = true;\n\t\t\tpan.addEventListener(\n\t\t\t\tegret.TouchEvent.TOUCH_BEGIN,\n\t\t\t\tfunction(e: egret.Event) {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t},\n\t\t\t\tthis,\n\t\t\t);\n\t\t\tthis.panResult = pan;\n\t\t\tthis.addChild(pan);\n\n\t\t\tlet tf = new egret.TextField();\n\t\t\ttf.size = 60;\n\t\t\ttf.width = pan.width;\n\t\t\ttf.height = tf.size * 2;\n\t\t\ttf.y = pan.height - tf.height;\n\t\t\ttf.verticalAlign = 'middle';\n\t\t\ttf.textAlign = 'center';\n\t\t\ttf.text = '再玩一次！';\n\t\t\ttf.background = true;\n\t\t\ttf.backgroundColor = 0x000033;\n\t\t\ttf.textColor = 0xffff00;\n\t\t\ttf.touchEnabled = true;\n\t\t\ttf.addEventListener(\n\t\t\t\tegret.TouchEvent.TOUCH_BEGIN,\n\t\t\t\tfunction(e: egret.Event) {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\tthis.panResult = null;\n\t\t\t\t\tthis.removeChild(pan);\n\t\t\t\t\tthis.resetGame();\n\t\t\t\t},\n\t\t\t\tthis,\n\t\t\t);\n\t\t\tpan.addChild(tf);\n\n\t\t\ttf = new egret.TextField();\n\t\t\ttf.size = 50;\n\t\t\ttf.width = pan.width;\n\t\t\ttf.height = pan.height;\n\t\t\ttf.textAlign = 'center';\n\n\t\t\tlet text = '\\n';\n\t\t\ttext += '<font color=#ff0000 size=70 stroke=2><b>致敬！抗日勇士！</b></font>';\n\t\t\ttext += '\\n\\n';\n\t\t\ttext += \"你消灭了<font color='#ff0000' size=80>\" + this.killEnemy + '</font>个鬼子';\n\t\t\ttext += '\\n\\n排名获取中，请稍候...';\n\t\t\ttf.textFlow = parser.parser(text);\n\t\t\tthis.labResult = tf;\n\t\t\tpan.addChild(tf);\n\t\t}\n\n\t\tif (iRank > 0) {\n\t\t\tlet rankd = this.killEnemy;\n\t\t\tif (rankd < 100) rankd = 0;\n\t\t\tlet rank = (rankd / 1500) * 100;\n\t\t\tlet text = '\\n';\n\t\t\ttext += '<font color=#ff0000 size=70 stroke=2><b>致敬！抗日勇士！</b></font>';\n\t\t\ttext += '\\n\\n';\n\t\t\ttext += \"你消灭了<font color='#ff0000' size=80>\" + this.killEnemy + '</font>个鬼子';\n\t\t\ttext += '\\n\\n';\n\t\t\tif (iRank < 100) text += \"排名第<font color='#ff0000' size=80>\" + iRank + '</font>名';\n\t\t\telse text += '还排不上号，继续努力～';\n\t\t\ttext += '\\n\\n';\n\t\t\ttext += \"超过了<font color='#ff0000' size=80>\" + iPercent + '%</font>的小伙伴';\n\t\t\tthis.labResult.textFlow = parser.parser(text);\n\t\t\tdocument.title =\n\t\t\t\t'为抗战阅兵点赞！我消灭了' +\n\t\t\t\tthis.killEnemy +\n\t\t\t\t'个鬼子！超过了' +\n\t\t\t\tiPercent +\n\t\t\t\t'%的小伙伴！不服来战！';\n\t\t}\n\t}\n\n\tprivate checkOver(): boolean {\n\t\tfor (let c = 0; c < Main.boxCol; c++) {\n\t\t\tlet dataList1 = [];\n\t\t\tlet dataList2 = [];\n\t\t\tfor (let r = 0; r < Main.boxRow; r++) {\n\t\t\t\tlet n1 = Main.boxRow - r - 1;\n\t\t\t\tlet n2 = r;\n\t\t\t\tdataList1[n1] = this.boxes[r][c];\n\t\t\t\tdataList2[n1] = this.boxes[r][c];\n\t\t\t}\n\t\t\tif (this.getLineResult(dataList1)['moved'] > 0 || this.getLineResult(dataList2)['moved'] > 0)\n\t\t\t\treturn false;\n\t\t}\n\n\t\tfor (let r = 0; r < Main.boxRow; r++) {\n\t\t\tlet dataList1 = [];\n\t\t\tlet dataList2 = [];\n\t\t\tfor (let c = 0; c < Main.boxCol; c++) {\n\t\t\t\tlet n1 = c;\n\t\t\t\tlet n2 = Main.boxCol - c - 1;\n\t\t\t\tdataList1[n1] = this.boxes[r][c];\n\t\t\t\tdataList2[n2] = this.boxes[r][c];\n\t\t\t}\n\t\t\tif (this.getLineResult(dataList1)['moved'] > 0 || this.getLineResult(dataList2)['moved'] > 0)\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate doMove(direction: number): void {\n\t\tif (this.lockMove > 0) {\n\t\t\tconsole.log('lockMove', this.lockMove);\n\t\t\treturn;\n\t\t}\n\t\tlet oldKillEnemy = this.killEnemy;\n\t\tlet moved = 0;\n\n\t\tif (direction == MoveDir.UP || direction == MoveDir.DOWN) {\n\t\t\tfor (let c = 0; c < Main.boxCol; c++) {\n\t\t\t\tlet dataList = [];\n\t\t\t\tfor (let r = 0; r < Main.boxRow; r++) {\n\t\t\t\t\tlet n = direction == MoveDir.UP ? r : Main.boxRow - r - 1;\n\t\t\t\t\tdataList[n] = this.boxes[r][c];\n\t\t\t\t}\n\t\t\t\t// console.log(\"check move in col:\", c);\n\t\t\t\tmoved += this.processLine(dataList);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let r = 0; r < Main.boxRow; r++) {\n\t\t\t\tlet dataList = [];\n\t\t\t\tfor (let c = 0; c < Main.boxCol; c++) {\n\t\t\t\t\tlet n = direction == MoveDir.LEFT ? c : Main.boxCol - c - 1;\n\t\t\t\t\tdataList[n] = this.boxes[r][c];\n\t\t\t\t}\n\t\t\t\t// console.log(\"check move in row:\", r);\n\t\t\t\tmoved += this.processLine(dataList);\n\t\t\t}\n\t\t}\n\n\t\tif (moved > 0) {\n\t\t\tthis.moveCount++;\n\t\t\tthis.ebus.dispatchEventWith('gameMove');\n\n\t\t\tlet parser: egret.HtmlTextParser = new egret.HtmlTextParser();\n\t\t\tthis.textfield.textFlow = parser.parser(\n\t\t\t\t'你消灭了<font color=#ff0000 size=70>' + this.killEnemy + '</font>个鬼子',\n\t\t\t);\n\t\t\t// document.title = '为抗战阅兵点赞！我消灭了' + this.killEnemy + '个鬼子！不服来战！';\n\n\t\t\tthis.playSound(this.killEnemy > oldKillEnemy ? this.soundGood : this.soundBad);\n\t\t}\n\n\t\tif (this.checkOver()) {\n\t\t\tthis.playSound(RES.getRes('sound_over'));\n\n\t\t\tthis.curState = 'showResult';\n\t\t\tthis.showOver();\n\t\t\t// this.getRank();\n\t\t\teraseCookie('lastGame');\n\t\t}\n\t}\n\n\tplaySound(sound: egret.Sound) {\n\t\tif (!LoadingUI.isSoundOn()) return;\n\t\tsound.play(0, 1);\n\t}\n\n\tprivate saveGame() {\n\t\tlet gameState = {};\n\t\tfor (let r = 0; r < Main.boxRow; r++) {\n\t\t\tgameState[r] = [];\n\t\t\tfor (let c = 0; c < Main.boxCol; c++) {\n\t\t\t\tlet box = this.boxes[r][c];\n\t\t\t\tgameState[r][c] = [box.level, box.side];\n\t\t\t}\n\t\t}\n\t\tlet save = {\n\t\t\tstate: gameState,\n\t\t\tkillEnemy: this.killEnemy,\n\t\t\tmoveCount: this.moveCount,\n\t\t};\n\t\tif (this.saveHistory.length >= this.saveLimit) {\n\t\t\tthis.saveHistory.splice(0, 1);\n\t\t\t// console.log('splice history');\n\t\t}\n\t\tthis.saveHistory.push(save);\n\n\t\tlet ss = JSON.stringify(this.saveHistory);\n\t\t// createCookie('lastGame', ss, 1);\n\t\t// console.log('save', this.moveCount);\n\t\tthis.ebus.dispatchEventWith(GameEvent.Save);\n\t}\n\n\tprivate processLine(dataList: Array<Box>) {\n\t\tlet ret = this.getLineResult(dataList);\n\t\tthis.performChanges(dataList, ret['changes']);\n\n\t\tthis.killEnemy += ret['killEnemy'];\n\t\treturn ret.moved;\n\t}\n\n\tprivate getLineResult(dataList: Array<Box>) {\n\t\tlet moved = 0;\n\t\tlet changes = [];\n\t\tlet killEnemy = 0;\n\t\tfor (let r = 0; r < dataList.length; r++) {\n\t\t\tlet b = dataList[r];\n\t\t\tlet bn = r < dataList.length - 1 ? dataList[r + 1] : undefined;\n\t\t\tif (bn == undefined) {\n\t\t\t\tchanges[r] = r - moved;\n\t\t\t\t// console.log(r, \"->\", changes[r]);\n\t\t\t} else if (b.level == bn.level) {\n\t\t\t\tif (b.side != bn.side && bn.side == 0) killEnemy += b.level;\n\n\t\t\t\tchanges[r] = -1;\n\t\t\t\tchanges[r + 1] = r - moved;\n\t\t\t\t// console.log(r, \"->\", -1);\n\t\t\t\t// console.log(r+1, \"->\", changes[r+1], \"=\", 2*b.level);\n\t\t\t\tmoved++;\n\t\t\t\tr++;\n\t\t\t} else {\n\t\t\t\tchanges[r] = r - moved;\n\t\t\t\t// console.log(r, \"->\", changes[r]);\n\t\t\t}\n\t\t}\n\t\tlet ret = {\n\t\t\tchanges: changes,\n\t\t\tkillEnemy: killEnemy,\n\t\t\tmoved: moved,\n\t\t};\n\t\treturn ret;\n\t}\n\n\tprivate performChanges(dataList: Array<Box>, changes: Array<number>) {\n\t\tlet source = [];\n\t\tfor (let r = 0; r < dataList.length; r++) source[r] = -1;\n\t\tfor (let r = 0; r < dataList.length; r++) {\n\t\t\tif (changes[r] != -1) source[changes[r]] = r;\n\t\t}\n\n\t\tfor (let r = 0; r < changes.length; r++) {\n\t\t\tlet smode = {}; // 检查自己的变化\n\t\t\tif (changes[r] == r) {\n\t\t\t\t// 不动\n\t\t\t\tsmode['move'] = 0;\n\t\t\t} else if (changes[r] == -1) {\n\t\t\t\t// 消失\n\t\t\t\tsmode['move'] = -1;\n\t\t\t} // 移走\n\t\t\telse {\n\t\t\t\tlet bt = dataList[changes[r]];\n\t\t\t\tsmode['move'] = 1;\n\t\t\t\tsmode['x'] = bt.x;\n\t\t\t\tsmode['y'] = bt.y;\n\t\t\t}\n\n\t\t\tlet nmode = {}; // 检查新来的\n\t\t\tif (source[r] == r) {\n\t\t\t\t// 不动\n\t\t\t\tnmode['new'] = 0;\n\t\t\t} else if (source[r] == -1) {\n\t\t\t\t// 没有\n\t\t\t\tnmode['new'] = -1;\n\t\t\t} // 有新来的\n\t\t\telse {\n\t\t\t\tlet bs = dataList[source[r]];\n\t\t\t\tlet up = changes[source[r] - 1] == -1;\n\t\t\t\tnmode['new'] = 1;\n\t\t\t\tnmode['level'] = bs.level * (up ? 2 : 1);\n\t\t\t\tnmode['side'] = bs.side;\n\t\t\t}\n\n\t\t\tdataList[r].perform(smode, nmode);\n\t\t}\n\t}\n\n\tcreateUI() {\n\t\tlet tf = new egret.TextField();\n\t\tlet updateText = () => {\n\t\t\ttf.text = `悔棋[${this.moveCount}][${this.saveHistory.length}]`;\n\t\t};\n\t\ttf.x = 10;\n\t\ttf.y = Box.offsetY - 90;\n\t\ttf.verticalAlign = 'middle';\n\t\ttf.textAlign = 'center';\n\t\ttf.size = 50;\n\t\ttf.stroke = 2;\n\t\ttf.strokeColor = 0x000000;\n\t\ttf.text = '悔棋';\n\t\ttf.background = true;\n\t\ttf.backgroundColor = 0x00ffff;\n\t\ttf.touchEnabled = true;\n\t\ttf.addEventListener(\n\t\t\tegret.TouchEvent.TOUCH_TAP,\n\t\t\tfunction(this: Main, e) {\n\t\t\t\tif (this.saveHistory.length < 2) return;\n\t\t\t\tthis.saveHistory.pop();\n\t\t\t\tlet ar = this.saveHistory.pop();\n\t\t\t\tconsole.log('click hq', this.saveHistory.length, ar);\n\t\t\t\tthis.resetGame(ar);\n\t\t\t\tif (this.panResult) {\n\t\t\t\t\tthis.removeChild(this.panResult);\n\t\t\t\t\tthis.panResult = null;\n\t\t\t\t\tthis.curState = 'playing';\n\t\t\t\t}\n\t\t\t},\n\t\t\tthis,\n\t\t);\n\t\tthis.ebus.addEventListener(\n\t\t\t'gameReset',\n\t\t\tar => {\n\t\t\t\t// console.log('check reset');\n\t\t\t\tupdateText();\n\t\t\t},\n\t\t\tthis,\n\t\t);\n\t\tthis.ebus.addEventListener(\n\t\t\t'gameMove',\n\t\t\tar => {\n\t\t\t\t// console.log('check move');\n\t\t\t\tupdateText();\n\t\t\t},\n\t\t\tthis,\n\t\t);\n\t\tthis.ebus.addEventListener(\n\t\t\tGameEvent.Save,\n\t\t\tar => {\n\t\t\t\t// console.log('check save');\n\t\t\t\tupdateText();\n\t\t\t},\n\t\t\tthis,\n\t\t);\n\t\tthis.addChild(tf);\n\t}\n\n\tprivate createGameScene(): void {\n\t\tthis.addEventListener(egret.TouchEvent.TOUCH_BEGIN, this.mouseDownHandle, this);\n\n\t\tthis.soundGood = RES.getRes('sound_good');\n\t\tthis.soundBad = RES.getRes('sound_bad');\n\n\t\tthis.boxes = [];\n\t\tfor (let r = 0; r < Main.boxRow; r++) {\n\t\t\tthis.boxes[r] = [];\n\t\t\tfor (let c = 0; c < Main.boxCol; c++) {\n\t\t\t\tlet box = new Box(this, r, c);\n\t\t\t\tthis.addChild(box);\n\t\t\t\tthis.boxes[r][c] = box;\n\t\t\t}\n\t\t}\n\n\t\tlet imgTitle = new egret.Bitmap();\n\t\timgTitle.texture = RES.getRes('title');\n\t\timgTitle.alpha = 0.5;\n\t\tthis.addChild(imgTitle);\n\n\t\tlet textfield = new egret.TextField();\n\t\ttextfield.width = this.width;\n\t\ttextfield.height = Box.offsetY - 5;\n\t\ttextfield.verticalAlign = 'middle';\n\t\ttextfield.textAlign = 'center';\n\t\ttextfield.size = 50;\n\t\ttextfield.stroke = 2;\n\t\ttextfield.strokeColor = 0x000000;\n\t\t// textfield.background = true;\n\t\ttextfield.backgroundColor = 0x00ff00;\n\t\t// textfield.touchEnabled = true;\n\t\t// textfield.addEventListener(\n\t\t// \tegret.TouchEvent.TOUCH_TAP,\n\t\t// \tfunction(e) {\n\t\t// \t\te.stopPropagation();\n\t\t// \t},\n\t\t// \tthis,\n\t\t// );\n\t\tthis.textfield = textfield;\n\t\tthis.addChild(textfield);\n\t\tconsole.log('tfheight', textfield.height);\n\n\t\tlet ar = null;\n\t\t// let lastGame = readCookie('lastGame');\n\t\t// if (lastGame) {\n\t\t// \tconsole.log('load', lastGame);\n\t\t// \tar = JSON.parse(lastGame);\n\t\t// \tar = ar[ar.length - 1];\n\t\t// }\n\n\t\tthis.resetGame(ar);\n\t}\n\n\tpublic data: number[][];\n\tpublic resetGame(ar = null): void {\n\t\tif (ar) {\n\t\t\tlet parser: egret.HtmlTextParser = new egret.HtmlTextParser();\n\t\t\tlet state = ar['state'];\n\t\t\tfor (let r = 0; r < Main.boxRow; r++) {\n\t\t\t\tfor (let c = 0; c < Main.boxCol; c++) {\n\t\t\t\t\tlet box = this.boxes[r][c];\n\t\t\t\t\tlet bs = state[r][c];\n\t\t\t\t\tbox.reset(bs[0], bs[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.moveCount = ar.moveCount;\n\t\t\tthis.killEnemy = ar.killEnemy;\n\t\t\tthis.textfield.textFlow = parser.parser(\n\t\t\t\t'你消灭了<font color=#ff0000 size=70>' + this.killEnemy + '</font>个鬼子',\n\t\t\t);\n\t\t} else {\n\t\t\tfor (let r = 0; r < Main.boxRow; r++) {\n\t\t\t\tfor (let c = 0; c < Main.boxCol; c++) {\n\t\t\t\t\tlet box = this.boxes[r][c];\n\t\t\t\t\tbox.reset();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.moveCount = 0;\n\t\t\tthis.killEnemy = 0;\n\t\t\tthis.textfield.text = '准备好消灭鬼子了吗？\\n指挥我军，撞死它们！';\n\t\t}\n\t\tthis.curState = 'playing';\n\t\teraseCookie('lastGame');\n\t\tthis.saveGame();\n\t\tthis.ebus.dispatchEventWith('gameReset');\n\t}\n\n\tprivate isAndroidQQ() {\n\t\treturn (\n\t\t\tthis.browserVersion['android'] && (this.browserVersion['qq'] || this.browserVersion['weixin'])\n\t\t);\n\t}\n}\n\n// console.log('1!main');\n(<any>window).Main = Main;\n","export function createCookie(name, value, days) {\n\tegret.localStorage.setItem(name, value);\n}\n\nexport function readCookie(name) {\n\treturn egret.localStorage.getItem(name);\n}\n\nexport function eraseCookie(name) {\n\tegret.localStorage.removeItem(name);\n}\n\nexport function getBrowserVersion() {\n\tlet u = navigator.userAgent,\n\t\tapp = navigator.appVersion;\n\treturn {\n\t\ttrident: u.indexOf('Trident') > -1, // IE内核\n\t\tpresto: u.indexOf('Presto') > -1, // opera内核\n\t\twebKit: u.indexOf('AppleWebKit') > -1, // 苹果、谷歌内核\n\t\tgecko: u.indexOf('Gecko') > -1 && u.indexOf('KHTML') == -1, // 火狐内核\n\t\tmobile: !!u.match(/AppleWebKit.*Mobile.*/), // 是否为移动终端\n\t\tios: !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/), // ios终端\n\t\tandroid: u.indexOf('Android') > -1 || u.indexOf('Linux') > -1, // android终端或者uc浏览器\n\t\tiPhone: u.indexOf('iPhone') > -1, // 是否为iPhone或者QQHD浏览器\n\t\tiPad: u.indexOf('iPad') > -1, // 是否iPad\n\t\twebApp: u.indexOf('Safari') == -1, // 是否web应该程序，没有头部与底部\n\t\tweixin: u.indexOf('MicroMessenger') > -1, // 是否微信 （2015-01-22新增）\n\t\tqq: u.indexOf('qq') > -1 || u.indexOf('QQ') > -1, // 是否QQ\n\t};\n}\n\nlet hideADS = function() {\n\ttry {\n\t\tlet ifr = document.getElementsByTagName('iframe')[0];\n\t\tlet div = ifr.parentNode as HTMLDivElement;\n\t\t// ifr.style.display = \"none\";\n\t\tdiv.style.right = '20%';\n\t\tdiv.style.bottom = '20%';\n\t} catch (e) {\n\t\tconsole.log('hideads error', e);\n\t}\n};\n\nexport function lerp(start, end, amt) {\n\tif (amt > 1) amt = 1;\n\telse if (amt < 0) amt = 0;\n\treturn (1 - amt) * start + amt * end;\n}\n\nexport enum MoveDir {\n\tNONE,\n\tUP,\n\tLEFT,\n\tDOWN,\n\tRIGHT,\n}\n\nexport enum MoveDirType {\n\tHorizone,\n\tVertical,\n}\n\nexport let getMoveDirType = (md: MoveDir) => {\n\tif (md == MoveDir.UP || md == MoveDir.DOWN) return MoveDirType.Vertical;\n\telse return MoveDirType.Horizone;\n};\n\nexport let GameEvent = {\n\tReset: 'Reset',\n\tMove: 'Move',\n\tSave: 'Save',\n\tDrag: 'Drag',\n\tDragEnd: 'DragEnd',\n};\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AACA;AAEA;AAAA;AA6BA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;AAGA;AA3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAqFA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAlLA;AACA;AACA;AACA;AACA;AACA;AA8KA;AAAA;AA/LA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AAEA;AAEA;AAAA;AAOA;AAAA;AAHA;AAKA;AACA;;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAhMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AASA;AAAA;AA0BA;AAAA;AAfA;AAKA;AAEA;AAGA;AAOA;AACA;AACA;;AACA;AAEA;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAAA;AACA;;AAAA;AACA;AAEA;AACA;AACA;AACA;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AAOA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAPA;AASA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AAGA;AAGA;AACA;AACA;AAGA;AAGA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAlmBA;AACA;AAkmBA;AAAA;AA1mBA;AA4mBA;AACA;;;;;;;;;;;;;;;ACxnBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AAMA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}